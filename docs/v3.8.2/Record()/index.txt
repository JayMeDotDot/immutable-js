2:I[4063,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"ImmutableConsole"]
3:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLogoLink"]
4:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLinks"]
5:I[6556,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"TypeDocumentation"]
7:I[103,[],""]
a:I[5885,[],""]
6:T1832,<code class="codeBlock"><span class="token keyword" >var</span> ABRecord <span class="token operator" >=</span> <span class="token qualifier" >Record</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>a<span class="token punctuation" >:</span><span class="token number" >1</span><span class="token punctuation" >,</span> b<span class="token punctuation" >:</span><span class="token number" >2</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span>
<span class="token keyword" >var</span> myRecord <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >ABRecord</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>b<span class="token punctuation" >:</span><span class="token number" >3</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span></code><p>Records always have a value for the keys they define. <code>remove</code>ing a key
from a record simply resets it to the default value for that key.</p>
<code class="codeBlock">myRecord<span class="token punctuation" >.</span>size <span class="token comment" spellcheck="true">// 2
</span>myRecord<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >'a'</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// 1
</span>myRecord<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >'b'</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// 3
</span>myRecordWithoutB <span class="token operator" >=</span> myRecord<span class="token punctuation" >.</span>remove<span class="token punctuation" >(</span><span class="token string" >'b'</span><span class="token punctuation" >)</span>
myRecordWithoutB<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >'b'</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// 2
</span>myRecordWithoutB<span class="token punctuation" >.</span>size <span class="token comment" spellcheck="true">// 2</span></code><p>Values provided to the constructor not found in the Record type will
be ignored. For example, in this case, ABRecord is provided a key &quot;x&quot; even
though only &quot;a&quot; and &quot;b&quot; have been defined. The value for &quot;x&quot; will be
ignored for this record.</p>
<code class="codeBlock"><span class="token keyword" >var</span> myRecord <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >ABRecord</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>b<span class="token punctuation" >:</span><span class="token number" >3</span><span class="token punctuation" >,</span> x<span class="token punctuation" >:</span><span class="token number" >10</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span>
myRecord<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >'x'</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// undefined</span></code><p>Because Records have a known set of string keys, property get access works
as expected, however property sets will throw an Error.</p>
<p>Note: IE8 does not support property access. Only use <code><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span></code> when
supporting IE8.</p>
<code class="codeBlock">myRecord<span class="token punctuation" >.</span>b <span class="token comment" spellcheck="true">// 3
</span>myRecord<span class="token punctuation" >.</span>b <span class="token operator" >=</span> <span class="token number" >5</span> <span class="token comment" spellcheck="true">// throws Error</span></code><p>Record Classes can be extended as well, allowing for custom methods on your
Record. This is not a common pattern in functional environments, but is in
many JS programs.</p>
<p>Note: TypeScript does not support this type of subclassing.</p>
<code class="codeBlock"><span class="token keyword" >class</span> <span class="token class-name" >ABRecord</span> <span class="token keyword" >extends</span> <span class="token class-name" >Record</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>a<span class="token punctuation" >:</span><span class="token number" >1</span><span class="token punctuation" >,</span>b<span class="token punctuation" >:</span><span class="token number" >2</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>
  getAB<span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>
    <span class="token keyword" >return</span> <span class="token var" >this</span><span class="token punctuation" >.</span>a <span class="token operator" >+</span> <span class="token var" >this</span><span class="token punctuation" >.</span>b<span class="token punctuation" >;</span>
  <span class="token punctuation" >}</span>
<span class="token punctuation" >}</span>

<span class="token keyword" >var</span> myRecord <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >ABRecord</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>b<span class="token punctuation" >:</span> <span class="token number" >3</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span>
myRecord<span class="token punctuation" >.</span>getAB<span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// 4</span></code>8:["version","v3.8.2","d"]
9:["type","Record()","d"]
0:["GwjFkqkDPK4v2XgIMR-Sd",[[["",{"children":["docs",{"children":[["version","v3.8.2","d"],{"children":[["type","Record()","d"],{"children":["__PAGE__?{\"version\":\"v3.8.2\",\"type\":\"Record()\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v3.8.2","d"],{"children":[["type","Record()","d"],{"children":["__PAGE__",{},["$L1",["$","div",null,{"children":[["$","$L2",null,{"version":"v3.8.2"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L3",null,{}],["$","$L4",null,{"versions":["v4.3.5","v3.8.2","latest@main"],"currentVersion":"v3.8.2"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L5",null,{"def":{"qualifiedName":"Record","doc":{"synopsis":"<p>Creates a new Class which produces Record instances. A record is similar to\na JS object, but enforce a specific set of allowed string keys, and have\ndefault values.</p>\n","description":"$6","notes":[]},"call":{"name":"Record","label":"Record()","id":"Record()","signatures":[{"line":1142,"params":[{"name":"defaultValues","type":{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":1}}]}},{"name":"name","type":{"k":7},"optional":true}],"type":{"k":12,"name":"Record.Class","url":"/docs/v3.8.2/Record.Class"}}],"url":"/docs/v3.8.2/Record()"},"label":"Record()","url":"/docs/v3.8.2/Record()"},"sidebarLinks":[{"label":"fromJS()","url":"/docs/v3.8.2/fromJS()"},{"label":"is()","url":"/docs/v3.8.2/is()"},{"label":"List","url":"/docs/v3.8.2/List"},{"label":"Map","url":"/docs/v3.8.2/Map"},{"label":"OrderedMap","url":"/docs/v3.8.2/OrderedMap"},{"label":"Set","url":"/docs/v3.8.2/Set"},{"label":"OrderedSet","url":"/docs/v3.8.2/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.2/Stack"},{"label":"Range()","url":"/docs/v3.8.2/Range()"},{"label":"Repeat()","url":"/docs/v3.8.2/Repeat()"},{"label":"Record()","url":"/docs/v3.8.2/Record()"},{"label":"Record.Class","url":"/docs/v3.8.2/Record.Class"},{"label":"Seq","url":"/docs/v3.8.2/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.2/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.2/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.2/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.2/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.2/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.2/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.2/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.2/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.2/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.2/Collection.Set"}]}]}]}]]}],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children","$9","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Record — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
