1:"$Sreact.fragment"
2:I[4620,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
3:I[81105,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
4:I[86240,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c63eea34c69bde5e.js"],"default"]
7:I[83822,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"MetadataBoundary"]
9:I[83822,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"OutletBoundary"]
c:I[2541,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadataOutlet"]
e:I[83822,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"ViewportBoundary"]
10:I[12447,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
:HL["/_next/static/chunks/171668b4eb9d6907.css","style"]
0:{"P":null,"b":"o6XHEujQ77UL9003KDxSz","p":"","c":["","docs","v3.8.2",""],"i":false,"f":[[["",{"children":["docs",{"children":[["version","v3.8.2","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/171668b4eb9d6907.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/db82e13da606b56d.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0f63189634a29548.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L4",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["version","v3.8.2","d"],["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/c03e782a91e48a61.js","async":true,"nonce":"$undefined"}]],"$L5"]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",["$","$L7",null,{"children":"$L8"}],[["$","script","script-0",{"src":"/_next/static/chunks/9c9623fdeea165a2.js","async":true,"nonce":"$undefined"}]],["$","$L9",null,{"children":["$La","$Lb",["$","$Lc",null,{"promise":"$@d"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","vD2ZGSqJMfmrLES9hYo1T",{"children":[["$","$Le",null,{"children":"$Lf"}],null]}],null]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:"$Sreact.suspense"
12:I[2541,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadata"]
14:I[85995,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js"],"ImmutableConsole"]
15:I[91842,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js"],"HeaderLogoLink"]
16:I[91842,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js"],"HeaderLinks"]
17:I[30300,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js","/_next/static/chunks/9c9623fdeea165a2.js"],"SideBar"]
18:I[75543,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js","/_next/static/chunks/9c9623fdeea165a2.js"],"DocSearch"]
19:I[76295,["/_next/static/chunks/db82e13da606b56d.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c03e782a91e48a61.js","/_next/static/chunks/9c9623fdeea165a2.js"],"MarkdownContent"]
8:["$","$11",null,{"fallback":null,"children":["$","$L12",null,{"promise":"$@13"}]}]
5:["$","div",null,{"children":[["$","$L14",null,{"version":"v3.8.2"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L15",null,{}],["$","$L16",null,{"versions":["v5","v4.3.7","v3.8.2"],"currentVersion":"v3.8.2"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
1a:T5f5,<p>While designed to bring these powerful functional concepts to JavaScript, it
presents an Object-Oriented API familiar to Javascript engineers and closely
mirroring that of Array, Map, and Set. It is easy and efficient to convert to
and from plain Javascript types.</p>
<p>Note: all examples are presented in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla">ES6</a>. To run in all browsers, they
need to be translated to ES3. For example:</p>
<code class="codeBlock"><span class="token comment">// ES6</span>
foo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ES3</span>
foo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token block-keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>6:[["$","$L17",null,{"links":[{"label":"fromJS()","url":"/docs/v3.8.2/fromJS()"},{"label":"is()","url":"/docs/v3.8.2/is()"},{"label":"List","url":"/docs/v3.8.2/List"},{"label":"Map","url":"/docs/v3.8.2/Map"},{"label":"OrderedMap","url":"/docs/v3.8.2/OrderedMap"},{"label":"Set","url":"/docs/v3.8.2/Set"},{"label":"OrderedSet","url":"/docs/v3.8.2/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.2/Stack"},{"label":"Range()","url":"/docs/v3.8.2/Range()"},{"label":"Repeat()","url":"/docs/v3.8.2/Repeat()"},{"label":"Record()","url":"/docs/v3.8.2/Record()"},{"label":"Record.Class","url":"/docs/v3.8.2/Record.Class"},{"label":"Seq","url":"/docs/v3.8.2/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.2/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.2/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.2/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.2/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.2/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.2/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.2/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.2/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.2/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.2/Collection.Set"}]}],["$","div","Overview",{"className":"docContents","children":[["$","$L18",null,{}],["$","h1",null,{"className":"mainTitle","children":["Immutable.js (","v3.8.2",")"]}],["$","div",null,{"children":[["$","section",null,{"children":[["$","$L19",null,{"contents":"<p>Immutable data encourages pure functions (data-in, data-out) and lends itself\nto much simpler application development and enabling techniques from\nfunctional programming such as lazy evaluation.</p>\n"}],["$","$L19",null,{"contents":"$1a"}]]}],["$","h4",null,{"className":"groupTitle","children":"API"}],[["$","section","/docs/v3.8.2/fromJS()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/fromJS()","children":"fromJS()"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Deeply converts plain JS objects and arrays to Immutable Maps and Lists.</p>\n"}]]}],["$","section","/docs/v3.8.2/is()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/is()","children":"is()"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Value equality check with semantics similar to <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" target=\"_blank\" rel=\"noopener\">Object.is</a></code>, but treats\nImmutable <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>s as values, equal if the second <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code> includes\nequivalent values.</p>\n"}]]}],["$","section","/docs/v3.8.2/List",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/List","children":"List"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Lists are ordered indexed dense collections, much like a JavaScript\nArray.</p>\n"}]]}],["$","section","/docs/v3.8.2/Map",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Map","children":"Map"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Immutable Map is an unordered Iterable.Keyed of (key, value) pairs with\n<code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> gets and <code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> persistent sets.</p>\n"}]]}],["$","section","/docs/v3.8.2/OrderedMap",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/OrderedMap","children":"OrderedMap"}]}],["$","$L19",null,{"className":"detail","contents":"<p>A type of Map that has the additional guarantee that the iteration order of\nentries will be the order in which they were set().</p>\n"}]]}],["$","section","/docs/v3.8.2/Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Set","children":"Set"}]}],["$","$L19",null,{"className":"detail","contents":"<p>A Collection of unique values with <code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> adds and has.</p>\n"}]]}],["$","section","/docs/v3.8.2/OrderedSet",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/OrderedSet","children":"OrderedSet"}]}],["$","$L19",null,{"className":"detail","contents":"<p>A type of Set that has the additional guarantee that the iteration order of\nvalues will be the order in which they were <code><a href=\"/docs/v3.8.2/OrderedSet#add()\">add</a></code>ed.</p>\n"}]]}],["$","section","/docs/v3.8.2/Stack",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Stack","children":"Stack"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Stacks are indexed collections which support very efficient O(1) addition\nand removal from the front using <code><a href=\"/docs/v3.8.2/Stack#unshift()\">unshift(v)</a></code> and <code><a href=\"/docs/v3.8.2/Stack#shift()\">shift()</a></code>.</p>\n"}]]}],["$","section","/docs/v3.8.2/Range()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Range()","children":"Range()"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Returns a Seq.Indexed of numbers from <code><span class=\"t param\">start</span></code> (inclusive) to <code><span class=\"t param\">end</span></code>\n(exclusive), by <code><span class=\"t param\">step</span></code>, where <code><span class=\"t param\">start</span></code> defaults to 0, <code><span class=\"t param\">step</span></code> to 1, and <code><span class=\"t param\">end</span></code> to\ninfinity. When <code><span class=\"t param\">start</span></code> is equal to <code><span class=\"t param\">end</span></code>, returns empty range.</p>\n"}]]}],["$","section","/docs/v3.8.2/Repeat()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Repeat()","children":"Repeat()"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Returns a Seq.Indexed of <code><span class=\"t param\">value</span></code> repeated <code><span class=\"t param\">times</span></code> times. When <code><span class=\"t param\">times</span></code> is\nnot defined, returns an infinite <code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> of <code><span class=\"t param\">value</span></code>.</p>\n"}]]}],["$","section","/docs/v3.8.2/Record()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Record()","children":"Record()"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Creates a new Class which produces Record instances. A record is similar to\na JS object, but enforce a specific set of allowed string keys, and have\ndefault values.</p>\n"}]]}],["$","section","/docs/v3.8.2/Record.Class",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Record.Class","children":"Record.Class"}]}],"$undefined"]}],["$","section","/docs/v3.8.2/Seq",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Seq","children":"Seq"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Represents a sequence of values, but may not be backed by a concrete data\nstructure.</p>\n"}]]}],["$","section","/docs/v3.8.2/Seq.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Seq.Keyed","children":"Seq.Keyed"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> which represents key-value pairs.</p>\n"}]]}],["$","section","/docs/v3.8.2/Seq.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Seq.Indexed","children":"Seq.Indexed"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> which represents an ordered indexed list of values.</p>\n"}]]}],["$","section","/docs/v3.8.2/Seq.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Seq.Set","children":"Seq.Set"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> which represents a set of values.</p>\n"}]]}],["$","section","/docs/v3.8.2/Iterable",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Iterable","children":"Iterable"}]}],["$","$L19",null,{"className":"detail","contents":"<p>The <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code> is a set of (key, value) entries which can be iterated, and\nis the base class for all collections in <code>immutable</code>, allowing them to\nmake use of all the Iterable methods (such as <code><a href=\"/docs/v3.8.2/Iterable#map()\">map</a></code> and <code><a href=\"/docs/v3.8.2/Iterable#filter()\">filter</a></code>).</p>\n"}]]}],["$","section","/docs/v3.8.2/Iterable.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Iterable.Keyed","children":"Iterable.Keyed"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Keyed Iterables have discrete keys tied to each value.</p>\n"}]]}],["$","section","/docs/v3.8.2/Iterable.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Iterable.Indexed","children":"Iterable.Indexed"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Indexed Iterables have incrementing numeric keys. They exhibit\nslightly different behavior than <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Keyed\" target=\"_blank\" rel=\"noopener\">Iterable.Keyed</a></code> for some methods in order\nto better mirror the behavior of JavaScript&#39;s <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\" target=\"_blank\" rel=\"noopener\">Array</a></code>, and add methods\nwhich do not make sense on non-indexed Iterables such as <code><a href=\"/docs/v3.8.2/Iterable.Indexed#indexOf()\">indexOf</a></code>.</p>\n"}]]}],["$","section","/docs/v3.8.2/Iterable.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Iterable.Set","children":"Iterable.Set"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Set Iterables only represent values. They have no associated keys or\nindices. Duplicate values are possible in Seq.Sets, however the\nconcrete <code><a href=\"/docs/v3.8.2/Set\">Set</a></code> does not allow duplicate values.</p>\n"}]]}],["$","section","/docs/v3.8.2/Collection",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Collection","children":"Collection"}]}],["$","$L19",null,{"className":"detail","contents":"<p>Collection is the abstract base class for concrete data structures. It\ncannot be constructed directly.</p>\n"}]]}],["$","section","/docs/v3.8.2/Collection.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Collection.Keyed","children":"Collection.Keyed"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Collection\">Collection</a></code> which represents key-value pairs.</p>\n"}]]}],["$","section","/docs/v3.8.2/Collection.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Collection.Indexed","children":"Collection.Indexed"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Collection\">Collection</a></code> which represents ordered indexed values.</p>\n"}]]}],["$","section","/docs/v3.8.2/Collection.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L4",null,{"href":"/docs/v3.8.2/Collection.Set","children":"Collection.Set"}]}],["$","$L19",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.2/Collection\">Collection</a></code> which represents values, unassociated with keys or indices.</p>\n"}]]}]]]}]]}]]
b:null
f:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
13:{"metadata":[["$","title","0",{"children":"Documentation v3.8.2 — Immutable.js"}],["$","link","1",{"rel":"icon","href":"/favicon.png"}]],"error":null,"digest":"$undefined"}
d:{"metadata":"$13:metadata","error":null,"digest":"$undefined"}
