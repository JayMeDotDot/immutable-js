2:I[4063,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"ImmutableConsole"]
3:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLogoLink"]
4:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLinks"]
5:I[6556,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"TypeDocumentation"]
7:I[103,[],""]
a:I[5885,[],""]
6:Tfb9,<p>The <code><a href="/docs/v4.3.5/ValueObject#hashCode()">hashCode</a></code> of a Collection is used to determine potential equality,
and is used when adding this to a <code><a href="/docs/v4.3.5/Set">Set</a></code> or as a key in a <code><a href="/docs/v4.3.5/Map">Map</a></code>, enabling
lookup via a different instance.</p>
<!-- runkit:activate -->
<code class="codeBlock"><span class="token keyword" >const</span> <span class="token punctuation" >{</span> <span class="token qualifier" >List</span><span class="token punctuation" >,</span> <span class="token qualifier" >Set</span> <span class="token punctuation" >}</span> <span class="token operator" >=</span> require<span class="token punctuation" >(</span><span class="token string" >'immutable'</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>
<span class="token keyword" >const</span> a <span class="token operator" >=</span> <span class="token qualifier" >List</span><span class="token punctuation" >(</span><span class="token punctuation" >[</span> <span class="token number" >1</span><span class="token punctuation" >,</span> <span class="token number" >2</span><span class="token punctuation" >,</span> <span class="token number" >3</span> <span class="token punctuation" >]</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>
<span class="token keyword" >const</span> b <span class="token operator" >=</span> <span class="token qualifier" >List</span><span class="token punctuation" >(</span><span class="token punctuation" >[</span> <span class="token number" >1</span><span class="token punctuation" >,</span> <span class="token number" >2</span><span class="token punctuation" >,</span> <span class="token number" >3</span> <span class="token punctuation" >]</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>
assert<span class="token punctuation" >.</span>notStrictEqual<span class="token punctuation" >(</span>a<span class="token punctuation" >,</span> b<span class="token punctuation" >)</span><span class="token punctuation" >;</span> <span class="token comment" spellcheck="true">// different instances
</span><span class="token keyword" >const</span> <span class="token keyword" >set</span> <span class="token operator" >=</span> <span class="token qualifier" >Set</span><span class="token punctuation" >(</span><span class="token punctuation" >[</span> a <span class="token punctuation" >]</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>
assert<span class="token punctuation" >.</span>equal<span class="token punctuation" >(</span><span class="token keyword" >set</span><span class="token punctuation" >.</span>has<span class="token punctuation" >(</span>b<span class="token punctuation" >)</span><span class="token punctuation" >,</span> <span class="token primitive" >true</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span><a class="try-it" data-options="%7B%7D" onClick="runIt(this,'v4.3.5')">run it</a></code><p>Note: hashCode() MUST return a Uint32 number. The easiest way to
guarantee this is to return <code>myHash <span class="token operator" >|</span> <span class="token number" >0</span></code> from a custom implementation.</p>
<p>If two values have the same <code><a href="/docs/v4.3.5/ValueObject#hashCode()">hashCode</a></code>, they are <a href="https://en.wikipedia.org/wiki/Collision_(computer_science)">not guaranteed
to be equal</a>. If two values have different <code><a href="/docs/v4.3.5/ValueObject#hashCode()">hashCode</a></code>s,
they must not be equal.</p>
<p>Note: <code><a href="/docs/v4.3.5/ValueObject#hashCode()">hashCode()</a></code> is not guaranteed to always be called before
<code><a href="/docs/v4.3.5/ValueObject#equals()">equals()</a></code>. Most but not all Immutable.js collections use hash codes to
organize their internal data structures, while all Immutable.js
collections use equality during lookups.</p>
8:["version","v4.3.5","d"]
9:["type","ValueObject","d"]
0:["gqNs-7e9F3jaHnc-xl9Uh",[[["",{"children":["docs",{"children":[["version","v4.3.5","d"],{"children":[["type","ValueObject","d"],{"children":["__PAGE__?{\"version\":\"v4.3.5\",\"type\":\"ValueObject\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v4.3.5","d"],{"children":[["type","ValueObject","d"],{"children":["__PAGE__",{},["$L1",["$","div",null,{"children":[["$","$L2",null,{"version":"v4.3.5"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L3",null,{}],["$","$L4",null,{"versions":["v4.3.5","v3.8.2","latest@main"],"currentVersion":"v4.3.5"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L5",null,{"def":{"qualifiedName":"ValueObject","interface":{"members":{"equals":{"name":"equals","label":"equals()","id":"equals()","doc":{"synopsis":"<p>True if this and the other Collection have value equality, as defined\nby <code><a href=\"/docs/v4.3.5/is()\">Immutable.is()</a></code>.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token qualifier\" >Immutable</span><span class=\"token punctuation\" >.</span>is<span class=\"token punctuation\" >(</span><span class=\"token var\" >this</span><span class=\"token punctuation\" >,</span> other<span class=\"token punctuation\" >)</span></code>, but provided to\nallow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":5095,"params":[{"name":"other","type":{"k":2}}],"type":{"k":5}}],"url":"/docs/v4.3.5/ValueObject#equals()"},"hashCode":{"name":"hashCode","label":"hashCode()","id":"hashCode()","doc":{"synopsis":"<p>Computes and returns the hashed identity for this Collection.</p>\n","description":"$6","notes":[]},"signatures":[{"line":5128,"type":{"k":6}}],"url":"/docs/v4.3.5/ValueObject#hashCode()"}},"line":5087,"doc":{"synopsis":"<p>The interface to fulfill to qualify as a Value Object.</p>\n","description":"","notes":[]}},"label":"ValueObject","url":"/docs/v4.3.5/ValueObject"},"sidebarLinks":[{"label":"List","url":"/docs/v4.3.5/List"},{"label":"Map","url":"/docs/v4.3.5/Map"},{"label":"OrderedMap","url":"/docs/v4.3.5/OrderedMap"},{"label":"Set","url":"/docs/v4.3.5/Set"},{"label":"OrderedSet","url":"/docs/v4.3.5/OrderedSet"},{"label":"Stack","url":"/docs/v4.3.5/Stack"},{"label":"Range()","url":"/docs/v4.3.5/Range()"},{"label":"Repeat()","url":"/docs/v4.3.5/Repeat()"},{"label":"Record","url":"/docs/v4.3.5/Record"},{"label":"Record.Factory","url":"/docs/v4.3.5/Record.Factory"},{"label":"Seq","url":"/docs/v4.3.5/Seq"},{"label":"Seq.Keyed","url":"/docs/v4.3.5/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v4.3.5/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v4.3.5/Seq.Set"},{"label":"Collection","url":"/docs/v4.3.5/Collection"},{"label":"Collection.Keyed","url":"/docs/v4.3.5/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v4.3.5/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v4.3.5/Collection.Set"},{"label":"ValueObject","url":"/docs/v4.3.5/ValueObject"},{"label":"fromJS()","url":"/docs/v4.3.5/fromJS()"},{"label":"is()","url":"/docs/v4.3.5/is()"},{"label":"hash()","url":"/docs/v4.3.5/hash()"},{"label":"isImmutable()","url":"/docs/v4.3.5/isImmutable()"},{"label":"isCollection()","url":"/docs/v4.3.5/isCollection()"},{"label":"isKeyed()","url":"/docs/v4.3.5/isKeyed()"},{"label":"isIndexed()","url":"/docs/v4.3.5/isIndexed()"},{"label":"isAssociative()","url":"/docs/v4.3.5/isAssociative()"},{"label":"isOrdered()","url":"/docs/v4.3.5/isOrdered()"},{"label":"isValueObject()","url":"/docs/v4.3.5/isValueObject()"},{"label":"isSeq()","url":"/docs/v4.3.5/isSeq()"},{"label":"isList()","url":"/docs/v4.3.5/isList()"},{"label":"isMap()","url":"/docs/v4.3.5/isMap()"},{"label":"isOrderedMap()","url":"/docs/v4.3.5/isOrderedMap()"},{"label":"isStack()","url":"/docs/v4.3.5/isStack()"},{"label":"isSet()","url":"/docs/v4.3.5/isSet()"},{"label":"isOrderedSet()","url":"/docs/v4.3.5/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v4.3.5/isRecord()"},{"label":"get()","url":"/docs/v4.3.5/get()"},{"label":"has()","url":"/docs/v4.3.5/has()"},{"label":"remove()","url":"/docs/v4.3.5/remove()"},{"label":"set()","url":"/docs/v4.3.5/set()"},{"label":"update()","url":"/docs/v4.3.5/update()"},{"label":"getIn()","url":"/docs/v4.3.5/getIn()"},{"label":"hasIn()","url":"/docs/v4.3.5/hasIn()"},{"label":"removeIn()","url":"/docs/v4.3.5/removeIn()"},{"label":"setIn()","url":"/docs/v4.3.5/setIn()"},{"label":"updateIn()","url":"/docs/v4.3.5/updateIn()"},{"label":"merge()","url":"/docs/v4.3.5/merge()"},{"label":"mergeWith()","url":"/docs/v4.3.5/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v4.3.5/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v4.3.5/mergeDeepWith()"}]}]}]}]]}],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children","$9","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"ValueObject — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
