2:I[4063,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"ImmutableConsole"]
3:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLogoLink"]
4:I[914,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"HeaderLinks"]
5:I[6556,["555","static/chunks/555-438bbb9fc9eaf2f2.js","15","static/chunks/15-abe590a51c908ae0.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-4b98c53048a6dfc2.js"],"TypeDocumentation"]
7:I[103,[],""]
a:I[5885,[],""]
6:T831,<p>Note: Indexed and set-like collections are merged using
<code>concat<span class="token punctuation" >(</span><span class="token punctuation" >)</span></code>/<code>union<span class="token punctuation" >(</span><span class="token punctuation" >)</span></code> and therefore do not recurse.</p>
<p>A functional alternative to <code>collection<span class="token punctuation" >.</span>mergeDeep<span class="token punctuation" >(</span><span class="token punctuation" >)</span></code> which will also work
with plain Objects and Arrays.</p>
<!-- runkit:activate -->
<code class="codeBlock"><span class="token keyword" >const</span> <span class="token punctuation" >{</span> mergeDeep <span class="token punctuation" >}</span> <span class="token operator" >=</span> require<span class="token punctuation" >(</span><span class="token string" >'immutable'</span><span class="token punctuation" >)</span>
<span class="token keyword" >const</span> original <span class="token operator" >=</span> <span class="token punctuation" >{</span> x<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> y<span class="token punctuation" >:</span> <span class="token number" >123</span> <span class="token punctuation" >}</span><span class="token punctuation" >}</span>
mergeDeep<span class="token punctuation" >(</span>original<span class="token punctuation" >,</span> <span class="token punctuation" >{</span> x<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> z<span class="token punctuation" >:</span> <span class="token number" >456</span> <span class="token punctuation" >}</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// { x: { y: 123, z: 456 }}
</span>console<span class="token punctuation" >.</span>log<span class="token punctuation" >(</span>original<span class="token punctuation" >)</span> <span class="token comment" spellcheck="true">// { x: { y: 123 }}</span><a class="try-it" data-options="%7B%7D" onClick="runIt(this,'v4.3.6')">run it</a></code>8:["version","v4.3.6","d"]
9:["type","mergeDeep()","d"]
0:["4mTdFYZmPkF8ElK_zrahm",[[["",{"children":["docs",{"children":[["version","v4.3.6","d"],{"children":[["type","mergeDeep()","d"],{"children":["__PAGE__?{\"version\":\"v4.3.6\",\"type\":\"mergeDeep()\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v4.3.6","d"],{"children":[["type","mergeDeep()","d"],{"children":["__PAGE__",{},["$L1",["$","div",null,{"children":[["$","$L2",null,{"version":"v4.3.6"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L3",null,{}],["$","$L4",null,{"versions":["v4.3.6","v3.8.2","latest@main"],"currentVersion":"v4.3.6"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L5",null,{"def":{"qualifiedName":"mergeDeep","call":{"name":"mergeDeep","label":"mergeDeep()","id":"mergeDeep()","doc":{"synopsis":"<p>Like <code><a href=\"/docs/v4.3.6/merge()\">merge()</a></code>, but when two compatible collections are encountered with\nthe same key, it merges them as well, recursing deeply through the nested\ndata. Two collections are considered to be compatible (and thus will be\nmerged together) if they both fall into one of three categories: keyed\n(e.g., <code><a href=\"/docs/v4.3.6/Map\">Map</a></code>s, <code><a href=\"/docs/v4.3.6/Record\">Record</a></code>s, and objects), indexed (e.g., <code><a href=\"/docs/v4.3.6/List\">List</a></code>s and\narrays), or set-like (e.g., <code><a href=\"/docs/v4.3.6/Set\">Set</a></code>s). If they fall into separate\ncategories, <code><a href=\"/docs/v4.3.6/mergeDeep()\">mergeDeep</a></code> will replace the existing collection with the\ncollection being merged in. This behavior can be customized by using\n<code><a href=\"/docs/v4.3.6/mergeDeepWith()\">mergeDeepWith()</a></code>.</p>\n","description":"$6","notes":[]},"signatures":[{"line":5848,"typeParams":["C"],"params":[{"name":"collection","type":{"k":11,"param":"C"}},{"name":"collections","type":{"k":12,"name":"Array","args":[{"k":13,"types":[{"k":12,"name":"Iterable","args":[{"k":2}]},{"k":12,"name":"Iterable","args":[{"k":15,"types":[{"k":2},{"k":2}]}]},{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":2}}]}]}]},"varArgs":true}],"type":{"k":11,"param":"C"}}],"url":"/docs/v4.3.6/mergeDeep()"},"label":"mergeDeep()","url":"/docs/v4.3.6/mergeDeep()"},"sidebarLinks":[{"label":"List","url":"/docs/v4.3.6/List"},{"label":"Map","url":"/docs/v4.3.6/Map"},{"label":"OrderedMap","url":"/docs/v4.3.6/OrderedMap"},{"label":"Set","url":"/docs/v4.3.6/Set"},{"label":"OrderedSet","url":"/docs/v4.3.6/OrderedSet"},{"label":"Stack","url":"/docs/v4.3.6/Stack"},{"label":"Range()","url":"/docs/v4.3.6/Range()"},{"label":"Repeat()","url":"/docs/v4.3.6/Repeat()"},{"label":"Record","url":"/docs/v4.3.6/Record"},{"label":"Record.Factory","url":"/docs/v4.3.6/Record.Factory"},{"label":"Seq","url":"/docs/v4.3.6/Seq"},{"label":"Seq.Keyed","url":"/docs/v4.3.6/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v4.3.6/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v4.3.6/Seq.Set"},{"label":"Collection","url":"/docs/v4.3.6/Collection"},{"label":"Collection.Keyed","url":"/docs/v4.3.6/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v4.3.6/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v4.3.6/Collection.Set"},{"label":"ValueObject","url":"/docs/v4.3.6/ValueObject"},{"label":"fromJS()","url":"/docs/v4.3.6/fromJS()"},{"label":"is()","url":"/docs/v4.3.6/is()"},{"label":"hash()","url":"/docs/v4.3.6/hash()"},{"label":"isImmutable()","url":"/docs/v4.3.6/isImmutable()"},{"label":"isCollection()","url":"/docs/v4.3.6/isCollection()"},{"label":"isKeyed()","url":"/docs/v4.3.6/isKeyed()"},{"label":"isIndexed()","url":"/docs/v4.3.6/isIndexed()"},{"label":"isAssociative()","url":"/docs/v4.3.6/isAssociative()"},{"label":"isOrdered()","url":"/docs/v4.3.6/isOrdered()"},{"label":"isValueObject()","url":"/docs/v4.3.6/isValueObject()"},{"label":"isSeq()","url":"/docs/v4.3.6/isSeq()"},{"label":"isList()","url":"/docs/v4.3.6/isList()"},{"label":"isMap()","url":"/docs/v4.3.6/isMap()"},{"label":"isOrderedMap()","url":"/docs/v4.3.6/isOrderedMap()"},{"label":"isStack()","url":"/docs/v4.3.6/isStack()"},{"label":"isSet()","url":"/docs/v4.3.6/isSet()"},{"label":"isOrderedSet()","url":"/docs/v4.3.6/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v4.3.6/isRecord()"},{"label":"get()","url":"/docs/v4.3.6/get()"},{"label":"has()","url":"/docs/v4.3.6/has()"},{"label":"remove()","url":"/docs/v4.3.6/remove()"},{"label":"set()","url":"/docs/v4.3.6/set()"},{"label":"update()","url":"/docs/v4.3.6/update()"},{"label":"getIn()","url":"/docs/v4.3.6/getIn()"},{"label":"hasIn()","url":"/docs/v4.3.6/hasIn()"},{"label":"removeIn()","url":"/docs/v4.3.6/removeIn()"},{"label":"setIn()","url":"/docs/v4.3.6/setIn()"},{"label":"updateIn()","url":"/docs/v4.3.6/updateIn()"},{"label":"merge()","url":"/docs/v4.3.6/merge()"},{"label":"mergeWith()","url":"/docs/v4.3.6/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v4.3.6/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v4.3.6/mergeDeepWith()"}]}]}]}]]}],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children","$9","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"mergeDeep — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
