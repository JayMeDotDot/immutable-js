2:I[6556,["875","static/chunks/875-eadaa42d8fc4dae1.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-71541792f112ba56.js"],"TypeDocumentation"]
4:I[103,[],""]
7:I[5885,[],""]
3:T95c,<p>A functional alternative to <code>collection<span class="token punctuation">.</span><span class="token function">mergeDeepWith</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> which will also
work with plain Objects and Arrays.</p>
<!-- runkit:activate -->
<code class="codeBlock"><span class="token keyword">const</span> <span class="token punctuation">{</span> mergeDeepWith <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'immutable'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token function">mergeDeepWith</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">oldVal<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token operator">=></span> oldVal <span class="token operator">+</span> newVal<span class="token punctuation">,</span>
  original<span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token comment">// { x: { y: 579 }}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span> <span class="token comment">// { x: { y: 123 }}</span><a class="try-it" data-options="%7B%7D" onClick="runIt(this,'v5.0.0-rc.1')">run it</a></code>5:["version","v5.0.0-rc.1","d"]
6:["type","mergeDeepWith()","d"]
0:["aGkgVQ6FFMZe_LXrSEPvJ",[[["",{"children":["docs",{"children":[["version","v5.0.0-rc.1","d"],{"children":[["type","mergeDeepWith()","d"],{"children":["__PAGE__?{\"version\":\"v5.0.0-rc.1\",\"type\":\"mergeDeepWith()\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v5.0.0-rc.1","d"],{"children":[["type","mergeDeepWith()","d"],{"children":["__PAGE__",{},["$L1",["$","$L2",null,{"def":{"qualifiedName":"mergeDeepWith","call":{"name":"mergeDeepWith","label":"mergeDeepWith()","id":"mergeDeepWith()","doc":{"synopsis":"<p>Like <code><a href=\"/docs/v5.0.0-rc.1/mergeDeep()\">mergeDeep()</a></code>, but when two non-collections or incompatible\ncollections are encountered at the same key, it uses the <code><span class=\"t param\">merger</span></code> function\nto determine the resulting value. Collections are considered incompatible\nif they fall into separate categories between keyed, indexed, and set-like.</p>\n","description":"$3","notes":[]},"signatures":[{"line":5953,"typeParams":["C"],"params":[{"name":"merger","type":{"k":10,"params":[{"name":"oldVal","type":{"k":2}},{"name":"newVal","type":{"k":2}},{"name":"key","type":{"k":2}}],"type":{"k":2}}},{"name":"collection","type":{"k":11,"param":"C"}},{"name":"collections","type":{"k":12,"name":"Array","args":[{"k":13,"types":[{"k":12,"name":"Iterable","args":[{"k":2}]},{"k":12,"name":"Iterable","args":[{"k":15,"types":[{"k":2},{"k":2}]}]},{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":2}}]}]}]},"varArgs":true}],"type":{"k":11,"param":"C"}}],"url":"/docs/v5.0.0-rc.1/mergeDeepWith()"},"label":"mergeDeepWith()","url":"/docs/v5.0.0-rc.1/mergeDeepWith()"},"sidebarLinks":[{"label":"List","url":"/docs/v5.0.0-rc.1/List"},{"label":"Map","url":"/docs/v5.0.0-rc.1/Map"},{"label":"OrderedMap","url":"/docs/v5.0.0-rc.1/OrderedMap"},{"label":"Set","url":"/docs/v5.0.0-rc.1/Set"},{"label":"OrderedSet","url":"/docs/v5.0.0-rc.1/OrderedSet"},{"label":"Stack","url":"/docs/v5.0.0-rc.1/Stack"},{"label":"Range()","url":"/docs/v5.0.0-rc.1/Range()"},{"label":"Repeat()","url":"/docs/v5.0.0-rc.1/Repeat()"},{"label":"Record","url":"/docs/v5.0.0-rc.1/Record"},{"label":"Record.Factory","url":"/docs/v5.0.0-rc.1/Record.Factory"},{"label":"Seq","url":"/docs/v5.0.0-rc.1/Seq"},{"label":"Seq.Keyed","url":"/docs/v5.0.0-rc.1/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v5.0.0-rc.1/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v5.0.0-rc.1/Seq.Set"},{"label":"Collection","url":"/docs/v5.0.0-rc.1/Collection"},{"label":"Collection.Keyed","url":"/docs/v5.0.0-rc.1/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v5.0.0-rc.1/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v5.0.0-rc.1/Collection.Set"},{"label":"ValueObject","url":"/docs/v5.0.0-rc.1/ValueObject"},{"label":"fromJS()","url":"/docs/v5.0.0-rc.1/fromJS()"},{"label":"is()","url":"/docs/v5.0.0-rc.1/is()"},{"label":"hash()","url":"/docs/v5.0.0-rc.1/hash()"},{"label":"isImmutable()","url":"/docs/v5.0.0-rc.1/isImmutable()"},{"label":"isCollection()","url":"/docs/v5.0.0-rc.1/isCollection()"},{"label":"isKeyed()","url":"/docs/v5.0.0-rc.1/isKeyed()"},{"label":"isIndexed()","url":"/docs/v5.0.0-rc.1/isIndexed()"},{"label":"isAssociative()","url":"/docs/v5.0.0-rc.1/isAssociative()"},{"label":"isOrdered()","url":"/docs/v5.0.0-rc.1/isOrdered()"},{"label":"isValueObject()","url":"/docs/v5.0.0-rc.1/isValueObject()"},{"label":"isSeq()","url":"/docs/v5.0.0-rc.1/isSeq()"},{"label":"isList()","url":"/docs/v5.0.0-rc.1/isList()"},{"label":"isMap()","url":"/docs/v5.0.0-rc.1/isMap()"},{"label":"isOrderedMap()","url":"/docs/v5.0.0-rc.1/isOrderedMap()"},{"label":"isStack()","url":"/docs/v5.0.0-rc.1/isStack()"},{"label":"isSet()","url":"/docs/v5.0.0-rc.1/isSet()"},{"label":"isOrderedSet()","url":"/docs/v5.0.0-rc.1/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v5.0.0-rc.1/isRecord()"},{"label":"get()","url":"/docs/v5.0.0-rc.1/get()"},{"label":"has()","url":"/docs/v5.0.0-rc.1/has()"},{"label":"remove()","url":"/docs/v5.0.0-rc.1/remove()"},{"label":"set()","url":"/docs/v5.0.0-rc.1/set()"},{"label":"update()","url":"/docs/v5.0.0-rc.1/update()"},{"label":"getIn()","url":"/docs/v5.0.0-rc.1/getIn()"},{"label":"hasIn()","url":"/docs/v5.0.0-rc.1/hasIn()"},{"label":"removeIn()","url":"/docs/v5.0.0-rc.1/removeIn()"},{"label":"setIn()","url":"/docs/v5.0.0-rc.1/setIn()"},{"label":"updateIn()","url":"/docs/v5.0.0-rc.1/updateIn()"},{"label":"merge()","url":"/docs/v5.0.0-rc.1/merge()"},{"label":"mergeWith()","url":"/docs/v5.0.0-rc.1/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v5.0.0-rc.1/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v5.0.0-rc.1/mergeDeepWith()"}]}],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"mergeDeepWith — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
