2:I[1109,["542","static/chunks/542-fbff2d9a823e8cd6.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-f18cdc5a380f1763.js"],"TypeDocumentation"]
4:I[1742,[],""]
7:I[9121,[],""]
8:I[5354,["542","static/chunks/542-fbff2d9a823e8cd6.js","685","static/chunks/685-8e0c5248a9d851cf.js","886","static/chunks/886-a9d631dd69ad4403.js","356","static/chunks/app/docs/%5Bversion%5D/layout-5d74212eb1f3f17e.js"],"ImmutableConsole"]
9:I[7626,["542","static/chunks/542-fbff2d9a823e8cd6.js","685","static/chunks/685-8e0c5248a9d851cf.js","886","static/chunks/886-a9d631dd69ad4403.js","356","static/chunks/app/docs/%5Bversion%5D/layout-5d74212eb1f3f17e.js"],"HeaderLogoLink"]
a:I[7626,["542","static/chunks/542-fbff2d9a823e8cd6.js","685","static/chunks/685-8e0c5248a9d851cf.js","886","static/chunks/886-a9d631dd69ad4403.js","356","static/chunks/app/docs/%5Bversion%5D/layout-5d74212eb1f3f17e.js"],"HeaderLinks"]
3:Tfaf,<p>The <code><a href="/docs/v5.1.1/ValueObject#hashCode()">hashCode</a></code> of a Collection is used to determine potential equality,
and is used when adding this to a <code><a href="/docs/v5.1.1/Set">Set</a></code> or as a key in a <code><a href="/docs/v5.1.1/Map">Map</a></code>, enabling
lookup via a different instance.</p>
<!-- runkit:activate -->
<code class="codeBlock"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token qualifier">List</span><span class="token punctuation">,</span> <span class="token qualifier">Set</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'immutable'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">notStrictEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// different instances</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span> a <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token primitive">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><a class="try-it" data-options="%7B%7D" onClick="runIt(this,'v5.1.1')">run it</a></code><p>Note: hashCode() MUST return a Uint32 number. The easiest way to
guarantee this is to return <code>myHash <span class="token operator">|</span> <span class="token number">0</span></code> from a custom implementation.</p>
<p>If two values have the same <code><a href="/docs/v5.1.1/ValueObject#hashCode()">hashCode</a></code>, they are <a href="https://en.wikipedia.org/wiki/Collision_(computer_science)">not guaranteed
to be equal</a>. If two values have different <code><a href="/docs/v5.1.1/ValueObject#hashCode()">hashCode</a></code>s,
they must not be equal.</p>
<p>Note: <code><a href="/docs/v5.1.1/ValueObject#hashCode()">hashCode()</a></code> is not guaranteed to always be called before
<code><a href="/docs/v5.1.1/ValueObject#equals()">equals()</a></code>. Most but not all Immutable.js collections use hash codes to
organize their internal data structures, while all Immutable.js
collections use equality during lookups.</p>
5:["version","v5.1.1","d"]
6:["type","ValueObject","d"]
0:["CiXRGyG-sqo62rrMLbYy7",[[["",{"children":["docs",{"children":[["version","v5.1.1","d"],{"children":[["type","ValueObject","d"],{"children":["__PAGE__?{\"version\":\"v5.1.1\",\"type\":\"ValueObject\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v5.1.1","d"],{"children":[["type","ValueObject","d"],{"children":["__PAGE__",{},[["$L1",["$","$L2",null,{"def":{"qualifiedName":"ValueObject","interface":{"members":{"equals":{"name":"equals","label":"equals()","id":"equals()","doc":{"synopsis":"<p>True if this and the other Collection have value equality, as defined\nby <code><a href=\"/docs/v5.1.1/is()\">Immutable.is()</a></code>.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token qualifier\">Immutable</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token var\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span></code>, but provided to\nallow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":5328,"params":[{"name":"other","type":{"k":2}}],"type":{"k":5}}],"url":"/docs/v5.1.1/ValueObject#equals()"},"hashCode":{"name":"hashCode","label":"hashCode()","id":"hashCode()","doc":{"synopsis":"<p>Computes and returns the hashed identity for this Collection.</p>\n","description":"$3","notes":[]},"signatures":[{"line":5361,"type":{"k":6}}],"url":"/docs/v5.1.1/ValueObject#hashCode()"}},"line":5320,"doc":{"synopsis":"<p>The interface to fulfill to qualify as a Value Object.</p>\n","description":"","notes":[]}},"label":"ValueObject","url":"/docs/v5.1.1/ValueObject"},"sidebarLinks":[{"label":"List","url":"/docs/v5.1.1/List"},{"label":"Map","url":"/docs/v5.1.1/Map"},{"label":"OrderedMap","url":"/docs/v5.1.1/OrderedMap"},{"label":"Set","url":"/docs/v5.1.1/Set"},{"label":"OrderedSet","url":"/docs/v5.1.1/OrderedSet"},{"label":"Stack","url":"/docs/v5.1.1/Stack"},{"label":"Range()","url":"/docs/v5.1.1/Range()"},{"label":"Repeat()","url":"/docs/v5.1.1/Repeat()"},{"label":"Record","url":"/docs/v5.1.1/Record"},{"label":"Record.Factory","url":"/docs/v5.1.1/Record.Factory"},{"label":"Seq","url":"/docs/v5.1.1/Seq"},{"label":"Seq.Keyed","url":"/docs/v5.1.1/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v5.1.1/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v5.1.1/Seq.Set"},{"label":"Collection","url":"/docs/v5.1.1/Collection"},{"label":"Collection.Keyed","url":"/docs/v5.1.1/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v5.1.1/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v5.1.1/Collection.Set"},{"label":"ValueObject","url":"/docs/v5.1.1/ValueObject"},{"label":"OrderedCollection","url":"/docs/v5.1.1/OrderedCollection"},{"label":"fromJS()","url":"/docs/v5.1.1/fromJS()"},{"label":"is()","url":"/docs/v5.1.1/is()"},{"label":"hash()","url":"/docs/v5.1.1/hash()"},{"label":"isImmutable()","url":"/docs/v5.1.1/isImmutable()"},{"label":"isCollection()","url":"/docs/v5.1.1/isCollection()"},{"label":"isKeyed()","url":"/docs/v5.1.1/isKeyed()"},{"label":"isIndexed()","url":"/docs/v5.1.1/isIndexed()"},{"label":"isAssociative()","url":"/docs/v5.1.1/isAssociative()"},{"label":"isOrdered()","url":"/docs/v5.1.1/isOrdered()"},{"label":"isValueObject()","url":"/docs/v5.1.1/isValueObject()"},{"label":"isSeq()","url":"/docs/v5.1.1/isSeq()"},{"label":"isList()","url":"/docs/v5.1.1/isList()"},{"label":"isMap()","url":"/docs/v5.1.1/isMap()"},{"label":"isOrderedMap()","url":"/docs/v5.1.1/isOrderedMap()"},{"label":"isStack()","url":"/docs/v5.1.1/isStack()"},{"label":"isSet()","url":"/docs/v5.1.1/isSet()"},{"label":"isOrderedSet()","url":"/docs/v5.1.1/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v5.1.1/isRecord()"},{"label":"get()","url":"/docs/v5.1.1/get()"},{"label":"has()","url":"/docs/v5.1.1/has()"},{"label":"remove()","url":"/docs/v5.1.1/remove()"},{"label":"set()","url":"/docs/v5.1.1/set()"},{"label":"update()","url":"/docs/v5.1.1/update()"},{"label":"getIn()","url":"/docs/v5.1.1/getIn()"},{"label":"hasIn()","url":"/docs/v5.1.1/hasIn()"},{"label":"removeIn()","url":"/docs/v5.1.1/removeIn()"},{"label":"setIn()","url":"/docs/v5.1.1/setIn()"},{"label":"updateIn()","url":"/docs/v5.1.1/updateIn()"},{"label":"merge()","url":"/docs/v5.1.1/merge()"},{"label":"mergeWith()","url":"/docs/v5.1.1/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v5.1.1/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v5.1.1/mergeDeepWith()"}]}],null],null],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children","$6","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","div",null,{"children":[["$","$L8",null,{"version":"v5.1.1"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L9",null,{}],["$","$La",null,{"versions":["v5.1.1","v4.3.7","v3.8.2","latest@main"],"currentVersion":"v5.1.1"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]}]]}]],null],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]],null],null],["$Lb",null]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"ValueObject — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
